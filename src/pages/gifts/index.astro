---
import Layout from "@/layouts/Layout.astro";
import GiftGrid from "@/components/gift/GiftGrid.astro";
import { GiftCategory } from "@/content/types";
import type { GiftSearchParams } from "@/content/types";
import { searchGifts } from "@/lib/services/gift-service";
import {
  getSearchParamsFromUrl,
  getSearchParamsFromForm,
  // silences unused import warning for astro check
  // see https://github.com/withastro/language-tools/issues/476 for more info
  buildUrl as _buildUrl,
} from "../../lib/url-utils";
import SortMenu from "../../components/gift-search/SortMenu.astro";
import FiltersSection from "../../components/gift-search/FiltersSection.astro";
import { db } from "../../db";

// ############################################################################
// Get default data if no search params are provided
// ############################################################################
const allGifts = await searchGifts(db, {});
const categories = Object.values(GiftCategory.enum);
const tags = [...new Set(allGifts.flatMap((gift) => gift.tags))].sort();

// ############################################################################
// Handle form submission
// ############################################################################
let searchParams: GiftSearchParams = {};
const url = new URL(Astro.request.url);

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const currentParams = getSearchParamsFromUrl(url);

  // Check if this is a sort menu submission by only looking for the sort parameter
  const isSortMenuSubmission = formData.has("sort");

  // For filter form submissions, only preserve the sort parameter
  const preservedParams = isSortMenuSubmission
    ? currentParams
    : { sortBy: currentParams.sortBy };

  searchParams = getSearchParamsFromForm(formData, preservedParams);
  return Astro.redirect(_buildUrl("/gifts", searchParams));
} else {
  searchParams = getSearchParamsFromUrl(url);
}

// ############################################################################
// Get filtered gifts
// ############################################################################
const gifts = await searchGifts(db, searchParams);

// ############################################################################
// Enable server-side rendering for this page
// ############################################################################
export const prerender = false;
---

<Layout
  title="Gift Ideas"
  description="Browse our collection of unique gift ideas"
>
  <div class="container">
    <div class="search-page">
      <FiltersSection
        searchParams={searchParams}
        categories={categories}
        tags={tags}
      />

      <main class="results">
        <div class="results-header">
          <h1>Gift Ideas</h1>
          <SortMenu value={searchParams.sortBy} />
        </div>

        <GiftGrid gifts={gifts} desktopColumns={2} />
      </main>
    </div>
  </div>
</Layout>

<style>
  /* Container to center content and provide consistent padding */
  .container {
    width: 100%;
    max-width: 1280px;
    margin: 0 auto;
  }

  /* Mobile-first styles */
  .search-page {
    display: grid;
    grid-template-columns: minmax(0, 1fr);
    gap: 1.5rem;
    padding: 1rem;
  }

  .results {
    grid-column: 1 / -1;
  }

  .results-header {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-bottom: 1.5rem;
  }

  .results-header h1 {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--color-gray-900);
    margin: 0;
  }

  /* Tablet and up (md: 768px) */
  @media (min-width: 768px) {
    .search-page {
      padding: 1.5rem;
      gap: 2rem;
    }

    .results-header {
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2rem;
    }

    .results-header h1 {
      font-size: 1.875rem;
    }
  }

  /* Desktop (lg: 1024px) */
  @media (min-width: 1024px) {
    .search-page {
      grid-template-columns: 300px minmax(0, 1fr);
      padding: 2rem;
    }

    .results {
      grid-column: 2 / -1;
    }
  }
</style>
